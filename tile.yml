---
name: crdb-service-broker
icon_file: resources/CL_Logo_Mark_256x256.png
label: CockroachDB Service Broker for PCF
description: A service broker for CockroachDB
org: system

apply_open_security_group: true

migration: |
  properties['properties']['.properties.org']['value'] = 'system';

packages:
  - name: crdb-service-broker
    type: app-broker
    manifest:
      buildpack: go_buildpack
      path: build/crdb-service-broker.zip
      memory: 256M
      instances: 1
      env:
        GOPACKAGENAME: github.com/cockroachdb/pcf-crdb-service-broker
        GOVERSION: go1.9
        SERVICES: '[
          {
            "id": "e2e250b5-73f8-45fd-9a7f-93c8dddc5f00",
            "name": "cockroachdb",
            "description": "CockroachDB service broker for creating cloud-native SQL databases.",
            "bindable": true,
            "plan_updateable": false,
            "metadata": {
              "displayName": "CockroachDB",
              "longDescription": "CockroachDB service broker for creating cloud-native SQL databases.",
              "documentationUrl": "https://www.cockroachlabs.com/docs/",
              "supportUrl": "https://www.cockroachlabs.com/community/",
              "imageUrl": "https://www.cockroachlabs.com/images/CockroachLabs_Logo_Mark-lightbackground.svg"
            },
            "tags": ["cockroachdb", "database", "SQL", "cloud", "kubernetes"]
          }
        ]'
        PRECONFIGURED_PLANS: '[]'
    needs_cf_credentials: false
    enable_global_access_to_plans: true


# Uncomment this section if you want to display forms with configurable
# properties in Ops Manager. These properties will be passed to your
# applications as environment variables. You can also refer to them
# elsewhere in this template by using:
#     (( .properties.<property-name> ))
# 
service_plan_forms:
- name: custom_plans
  description: 'Generate plans for CockroachDB. Each plan can be used to connect to a given CockroachDB cluster.'
  label: 'Plans'
  optional: false
  properties:
    - name: display_name
      label: 'Display Name'
      type: string
      default: "CockroachDB"
      configurable: true
    - name: description
      label: 'Plan description'
      type: string
      default: "Create service instances for the shared CockroachDB cluster."
      configurable: true
    - name: service
      label: 'Service'
      type: dropdown_select
      options:
        - name: 'e2e250b5-73f8-45fd-9a7f-93c8dddc5f00'
          label: 'CockroachDB'
          default: true
    - name: host
      label: 'Database hostname'
      type: string
      description: 'Address to the CockroachDB cluster. This is ideally a load balancer in front of the cluster, but can also be a specific CockroachDB instance. Currently, this must be an --insecure deployment'
      configurable: true
    - name: port
      label: 'Database port (defaults to 26257)'
      type: integer
      default: 26257
      configurable: true
      constraints:
        min: 1
        max: 65535
# TODO(nstewart): SSL mode coming in a future release

# TODO(radu): default zone config for each plan?


# Include stemcell criteria if you don't want to accept the default.
# Since this stemcell is only used to run pre and post errands, we
# strongly recommend you leave this alone so that your tile always
# runs with the latest stemcell.
#
# stemcell_criteria:
#   os: ubuntu-trusty
#   requires_cpi: false
#   version: '3062'

# Add properties you want to pass to your applications.
# Properties specified here will not be configurable by the user.
#
# properties:
# - name: example_property
#   type: string
#   default: specify a value
#   label: Label for the field on the GUI
#   description: Longer description of the field's purpose

# Add any dependencies your tile has on other installed products.
# This is often appropriate when using automatic service provisioning
# for any of your packages above, with services provided by other
# products.
#
# requires_product_versions:
# - name: p-mysql
#   version: '~> 1.7'

# Customize upgrade parameters if the defaults don't meet your needs.
#
# update:
#   canaries: 1
#   canary_watch_time: 10000-100000
#   max_in_flight: 1
#   update_watch_time: 10000-100000

# If prior versions of your tile are installed and configured, their
# property values will not be overwritten by new defaults provided
# in this file. If that is your intent, you must do the overwriting
# explicitly using JavaScript migration functions, like so:
#
# migration: |
#   properties['properties']['.properties.org']['value'] = 'system';
